@model Trabalho_Laboratorio.ViewModel.HomePageViewModel
@{
	ViewData["Title"] = "Home Page";
}
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">

	@{int i = 0;}

	<div class="carousel-inner">
		@foreach (var informacao in Model.Heroes)
		{

			<div class="carousel-item @(i == 0? "active": "")">
				<img class="d-block img-fluid" src="@informacao.HeroPhoto" alt="First slide">
				<div class="carousel-caption d-none d-md-block">
					<h5>@informacao.Titulo</h5>
					<p>@informacao.Descricao</p>
				</div>
			</div>

			i++;
		}
	</div>
	<ol class="carousel-indicators">
		@for (i = i - 1; i >= 0; i--)
		{
			<li data-target="#carouselExampleIndicators" data-slide-to="i" class="@(i == 0? "active": "")"></li>
		}
	</ol>
	<a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
		<span class="carousel-control-prev-icon" aria-hidden="true"></span>
		<span class="sr-only">Previous</span>
	</a>
	<a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
		<span class="carousel-control-next-icon" aria-hidden="true"></span>
		<span class="sr-only">Next</span>
	</a>
</div>
<div class="row">
	<div class="container rounded bg-light mt-5  ">

		@*GRID COM OS PRATOS DO DIA*@
		<section class="card-wrapper mt-5 p-1">

			@foreach (var item in Model.ListaPratos)
			{

				<article class="card card-meal">
					<div class="img-wrap">
						<a asp-controller="AgendarPratos" asp-action="Detalhes" asp-route-id="@item.IdAgendamento">
							<img class="meal-image" src="@Html.DisplayFor(modelItem => item.FotoExtra)">
						</a>
						<div class="ml-2"><span class="h6">@Html.DisplayFor(modelItem => item.IdPratoNavigation.Nome) (@Html.DisplayFor(modelItem => item.IdPratoNavigation.TipoPrato))</span></div>
						<div class="ml-2"><a class="h6" asp-controller="Restaurantes" asp-action="Detalhes" asp-route-id="@item.IdRestaurante">@Html.DisplayFor(modelItem => item.IdRestauranteNavigation.NomeRestaurante)</a></div>
					</div>
					<figcaption class="info-wrap">
						<div class="meal-content"><p>@item.DescricaoExtra</p></div>
						<span class="price-content">@Html.DisplayFor(modelItem => item.Preco)€</span>
					</figcaption>
				</article>

			}
		</section>
		@{
			var prevDisabled = !Model.ListaPratos.HasPreviousPage ? "disabled" : "";
			var nextDisabled = !Model.ListaPratos.HasNextPage ? "disabled" : "";
		}
	</div>
</div>

<div class="row justify-content-center mt-3">
	@*PAGINAÇÃO*@
	<div>
		<ul class="pagination" @prevDisabled ">
			<li class="page-item disabled">
				<a class="page-link" href="#">&laquo;</a>
			</li>
			<li class="page-item active">
				<a class="page-link" href="#">@Model.ListaPratos.PageIndex</a>
			</li>
			<li class="page-item @nextDisabled">
				<a class="page-link" href="#">&raquo;</a>
			</li>
		</ul>
	</div>
</div>

<script>

	function hideOverflow(element) {

		//Calculate lineHeight and maxLineCount for parent's height
		element.style.whiteSpace = 'nowrap';
		var parent = element.parentNode;
		var maxLineCount = Math.floor(parent.clientHeight / element.clientHeight);
		var maxLineHeight = element.clientHeight * maxLineCount;
		element.style.whiteSpace = 'normal';

		//Find and set maxLineHeight by replacing the overflow with an ellipses
		if (element.clientHeight > maxLineHeight) {
			var max = maxLineCount * element.style.lineHeight;
			for (var i = 0; element.clientHeight > maxLineHeight; i++) {
				element.innerHTML = element.textContent.slice(0, -2) + '&hellip;';
				i++;
				if (i === max) break;
			}
		}
	}

	for (var i = 0; i < document.getElementsByClassName("meal-content").length; i++) {
		hideOverflow(document.getElementsByClassName("meal-content")[i].childNodes[0]);

	}
</script>